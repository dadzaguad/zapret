name: Build and Sign Application

on:
  push:
    branches: [ "feature", "master" ]
    tags:
      - "v*"

jobs:
  build-and-sign:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel && pip install -r requirements.txt && pip install pyinstaller

      - name: Generate certificate with OpenSSL
        shell: cmd
        run: openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj "//CN=ZapretApp" && openssl pkcs12 -export -out cert.pfx -inkey key.pem -in cert.pem -password pass:Password123

      - name: Build with PyInstaller
        run: pyinstaller main.spec

      - name: Install Windows SDK
        run: choco install windows-sdk-10.1 -y

      - name: Sign executable
        shell: powershell
        run: |
          # Путь к signtool может меняться, используй переменную окружения или более надежный способ поиска
          $signtoolPaths = @(
              "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64\signtool.exe",
              "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22000.0\x64\signtool.exe",
              "C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\signtool.exe"
              # Добавь другие возможные пути при необходимости
          )
          $signtool = $signtoolPaths | Where-Object { Test-Path $_ } | Select-Object -First 1
          if (-not $signtool) {
              Write-Error "SignTool.exe not found in expected locations."
              exit 1
          }
          Write-Host "Using SignTool: $signtool"

          # --- ИЗМЕНЕНИЕ ЗДЕСЬ ---
          $targetExe = "dist\Zapret.exe" # Используем правильное имя файла
          # --- КОНЕЦ ИЗМЕНЕНИЯ ---

          Write-Host "Signing $targetExe..."
          & "$signtool" sign /f cert.pfx /p Password123 /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 /v "$targetExe"
          Write-Host "Verifying signature for $targetExe..."
          & "$signtool" verify /pa /v "$targetExe" # Убрал Out-Null для отладки, можно вернуть если мешает
          # Убрал exit 0, чтобы workflow упал, если signtool вернет ошибку

      - name: Prepare artifact
        shell: cmd
        run: |
          mkdir dist-artifacts
          echo Moving dist\Zapret.exe to dist-artifacts\Zapret.exe
          # --- ИЗМЕНЕНИЕ ЗДЕСЬ ---
          move dist\Zapret.exe dist-artifacts\Zapret.exe
          # --- КОНЕЦ ИЗМЕНЕНИЯ ---
          echo Contents of dist-artifacts:
          dir dist-artifacts

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: signed-application
          path: dist-artifacts/Zapret.exe

  release:
    needs: build-and-sign
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: signed-application
          path: release-artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-artifacts/Zapret.exe

          body: "Self-signed executable (Windows may show security warning)"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
