name: Build and Sign Application

on:
  push:
    branches: [ "feature", "master" ]
    tags:
      - "v*"

jobs:
  build-and-sign:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel && pip install -r requirements.txt && pip install pyinstaller

      - name: Generate certificate with OpenSSL
        shell: cmd
        run: openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj "//CN=ZapretApp" && openssl pkcs12 -export -out cert.pfx -inkey key.pem -in cert.pem -password pass:Password123

      - name: Build with PyInstaller
        run: pyinstaller main.spec

      - name: Sign executable
        shell: powershell
        run: |
          # Ищем signtool.exe рекурсивно в стандартном месте установки SDK
          $sdkBinPath = "C:\Program Files (x86)\Windows Kits\10\bin"
          Write-Host "Searching for signtool.exe in $sdkBinPath..."
          $signtool = Get-ChildItem -Path $sdkBinPath -Filter signtool.exe -Recurse -ErrorAction SilentlyContinue | Where-Object { $_.FullName -match "\\x64\\signtool.exe$" } | Select-Object -ExpandProperty FullName -First 1

          if (-not $signtool) {
              # Дополнительная попытка поиска без учета x64 на случай странных установок
              Write-Host "Signtool.exe (x64) not found, trying any architecture..."
              $signtool = Get-ChildItem -Path $sdkBinPath -Filter signtool.exe -Recurse -ErrorAction SilentlyContinue | Select-Object -ExpandProperty FullName -First 1
          }

          if (-not $signtool) {
              Write-Error "SignTool.exe not found in $sdkBinPath or subdirectories."
              # Дополнительная диагностика: выведем содержимое папки bin
              if (Test-Path $sdkBinPath) {
                 Write-Host "Contents of $sdkBinPath\ :"
                 Get-ChildItem -Path $sdkBinPath -Depth 1 | Out-String | Write-Host
              } else {
                 Write-Host "$sdkBinPath does not exist."
              }
              exit 1
          }
          Write-Host "Found SignTool: $signtool"

          $targetExe = "dist\Zapret.exe"

          Write-Host "Signing $targetExe with self-signed certificate..."
          # Используем Start-Process для лучшей обработки ошибок и кавычек
          $signArgs = @(
              "sign",
              "/f", "cert.pfx",
              "/p", "Password123",
              "/fd", "SHA256",
              "/tr", "http://timestamp.digicert.com",
              "/td", "SHA256",
              "/v",
              "`"$targetExe`"" # Экранируем кавычки для пути к exe
          )
          Write-Host "Executing: $signtool $signArgs"
          $process = Start-Process -FilePath $signtool -ArgumentList $signArgs -Wait -PassThru -NoNewWindow
          Write-Host "SignTool exit code: $($process.ExitCode)"

          if ($process.ExitCode -ne 0) {
              Write-Error "SignTool failed with exit code $($process.ExitCode)."
              exit 1
          }

          Write-Host "Signing process completed successfully."

      - name: Prepare artifact
        shell: cmd
        run: |
          mkdir dist-artifacts
          echo Moving dist\Zapret.exe to dist-artifacts\Zapret.exe
          # --- ИЗМЕНЕНИЕ ЗДЕСЬ ---
          move dist\Zapret.exe dist-artifacts\Zapret.exe
          # --- КОНЕЦ ИЗМЕНЕНИЯ ---
          echo Contents of dist-artifacts:
          dir dist-artifacts

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: signed-application
          path: dist-artifacts/Zapret.exe

  release:
    needs: build-and-sign
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: signed-application
          path: release-artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-artifacts/Zapret.exe

          body: "Self-signed executable (Windows may show security warning)"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
