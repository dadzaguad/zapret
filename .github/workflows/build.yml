name: Build and Release Application

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Установите зависимости проекта (включая pyinstaller)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install pyinstaller

      # Соберите приложение с помощью PyInstaller
      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --noconsole --paths=src --add-data "src/scripts/bin;src/scripts/bin" --add-data "src/scripts/*.txt;src/scripts" --icon=icon.ico main.py

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: application-build
          path: dist/main.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: application-build

      - name: Publish to GitHub Releases
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Автоматический релиз собран с использованием GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/main.exe
          asset_name: my_application.exe
          asset_content_type: application/octet-stream