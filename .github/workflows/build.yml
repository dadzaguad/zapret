name: Build and Release Application

on:
  push:
    branches: [ "feature", "main" ]
    tags:
      - "v*"

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Проверка исходного кода
      - name: Checkout repository
        uses: actions/checkout@v4

      # Установка Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      # Установка зависимостей
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install pyinstaller

      # Сборка при помощи PyInstaller
      - name: Build with PyInstaller
        run: pyinstaller --onefile --noconsole --paths=src --add-data "src/scripts/bin;src/scripts/bin" --add-data "src/scripts/*.txt;src/scripts" --add-data "src/scripts/commands.json;src/scripts" --add-data "icon.ico;." --icon=icon.ico main.py

      # Перемещение собранного файла в отдельный каталог
      - name: Move artifact
        run: |
          mkdir -p dist-artifacts
          mv dist/main.exe dist-artifacts/main.exe

      # Проверка файлов после сборки
      - name: Check files after build
        run: |
          ls -R
          ls dist-artifacts

      # Загрузка артефакта для передачи другому шагу
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-build
          path: dist-artifacts/main.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      # Загрузка артефакта для релиза
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: application-build

      # Проверка, что файл загружен
      - name: Check downloaded artifact
        run: |
          ls -R

      # Публикация релиза на GitHub
      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          files: main.exe
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}