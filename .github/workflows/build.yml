name: Build and Sign Application

on:
  push:
    branches: [ "feature", "main" ]
    tags:
      - "v*"

env:
  CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}

jobs:
  build-and-sign:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install pyinstaller

      # Генерация сертификата (исправленная версия)
      - name: Generate certificate with OpenSSL
        shell: cmd
        run: |
          openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj "//CN=ZapretApp"
          openssl pkcs12 -export -out cert.pfx -inkey key.pem -in cert.pem -password pass:%CERT_PASSWORD%

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --noconsole ^
            --paths=src ^
            --add-data "src/scripts/bin;src/scripts/bin" ^
            --add-data "src/scripts/*.txt;src/scripts" ^
            --add-data "src/scripts/commands.json;src/scripts" ^
            --add-data "icon.ico;." ^
            --icon=icon.ico main.py

      - name: Install Windows SDK
        run: choco install windows-sdk-10.1 -y

      - name: Sign executable
        shell: powershell
        run: |
          $signtoolPath = (Resolve-Path "C:\Program Files (x86)\Windows Kits\10\bin\*\x64\signtool.exe").Path
          & "$signtoolPath" sign ^
            /f "cert.pfx" ^
            /p "$env:CERT_PASSWORD" ^
            /fd SHA256 ^
            /tr "http://timestamp.digicert.com" ^
            /td SHA256 ^
            /v "dist\main.exe"
          
          & "$signtoolPath" verify /pa /v "dist\main.exe"

      - name: Prepare artifact
        run: |
          mkdir -p dist-artifacts
          mv dist/main.exe dist-artifacts/
          dir /s dist-artifacts

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: signed-application
          path: dist-artifacts/main.exe

  release:
    needs: build-and-sign
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: signed-application

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: main.exe
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: "Signed executable with self-signed certificate"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}