name: Build and Release Application

on:
  push:
    branches: [ "feature", "main" ]
    tags:
      - "v*"  # И при создании тега v*
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Проверка исходного кода
      - name: Checkout repository
        uses: actions/checkout@v4

      # Установка Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"  # Явно указываем версию Python

      # Установка зависимостей
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install pyinstaller

      # Сборка при помощи PyInstaller (используем spec-файл)
      - name: Build with PyInstaller
        run: |
          pyinstaller main.spec
          # Проверяем, что файл создан
          if not exist "dist\main.exe" (exit 1)

      # Создаем папку для артефактов и копируем туда exe
      - name: Prepare artifact
        run: |
          mkdir -p dist-artifacts
          copy dist\main.exe dist-artifacts\
          # Копируем необходимые дополнительные файлы, если нужно
          xcopy src\scripts\*.txt dist-artifacts\ /Y
          xcopy src\scripts\*.json dist-artifacts\ /Y
          xcopy src\scripts\bin dist-artifacts\bin\ /E /Y

      # Проверка файлов после сборки
      - name: Check files after build
        run: |
          dir /s dist-artifacts

      # Загрузка артефакта
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-build
          path: dist-artifacts/*
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      # Загрузка артефакта
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: application-build
          path: release-files

      # Создание релиза
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-files/main.exe
            release-files/*.txt
            release-files/*.json
            release-files/bin/*
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            Автоматически собранная версия ${{ github.ref_name }}
            Содержит:
            - main.exe
            - Конфигурационные файлы
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}